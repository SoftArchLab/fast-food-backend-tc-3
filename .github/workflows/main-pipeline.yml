# This is a basic workflow to help you get started with Actions

name: main-pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0' # Specify your .NET version    

      # Runs a single command using the runners shell
      - name: Restore dependencies
        run: dotnet restore
  
      - name: Build
        run: dotnet build --no-restore

  deployECR:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  # deployDockerImage:

  #   runs-on: ubuntu-latest
  #   needs: build # This job depends on the 'build' job
  
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v4
  
  #     - name: Login to dockerhub
  #       uses: docker/login-action@v3
  #       with:
  #        username: ${{ secrets.DOCKERHUB_USERNAME }}
  #        password: ${{ secrets.DOCKERHUB_TOKEN }}
  
  #     - name: Build and push to dockerhub
  #       uses: docker/build-push-action@v5
  #       with:
  #        context: .
  #        push: true
  #        tags: ${{ secrets.DOCKERHUB_USERNAME }}/tc-fastfoodapi:latest


